{"version":"1","records":[{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook"},"content":"","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook"},"type":"lvl1","url":"/#marine-heatwaves-cookbook","position":2},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook"},"content":"\n\n\n\n\n\n\n\nThis main goal of this Marine Heatwaves Cookbook is to show how to detect and forecast marine heatwaves based on available observational and model forecast data.\nThe step and code used in the cookbook is also used to generate the \n\nMarine Heatwave Portal at NOAA Physcial Science Laboratory\nTo understand more scientific detail of the forecast skill please check out \n\nJacox et al., 2022\n\nThis cookbook is initiated during the pythia cookoff 2023.","type":"content","url":"/#marine-heatwaves-cookbook","position":3},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Motivation"},"type":"lvl2","url":"/#motivation","position":4},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Motivation"},"content":"The marine heatwave have started to become one of the many “hot topics” in climate science.\nThis cookbook is aiming to show how a marine heatwave is detected and forecast based on \n\nJacox et al., 2022","type":"content","url":"/#motivation","position":5},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Authors"},"type":"lvl2","url":"/#authors","position":6},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Authors"},"content":"Chia-Wei Hsu","type":"content","url":"/#authors","position":7},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Contributors","lvl2":"Authors"},"type":"lvl3","url":"/#contributors","position":8},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Contributors","lvl2":"Authors"},"content":"","type":"content","url":"/#contributors","position":9},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Structure"},"type":"lvl2","url":"/#structure","position":10},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Structure"},"content":"This cookbook is broken up into two main chapters - “Foundation” and “Application”","type":"content","url":"/#structure","position":11},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Foundation","lvl2":"Structure"},"type":"lvl3","url":"/#foundation","position":12},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Foundation","lvl2":"Structure"},"content":"In this chapter, we will show how a marine heatwave is detected over the ocean using observational data.\nWe will also explain one of the hot discussion topics in the marine heatwave field - “\n\nMarine heatwaves need clear definitions so coastal communities can adapt”","type":"content","url":"/#foundation","position":13},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Application","lvl2":"Structure"},"type":"lvl3","url":"/#application","position":14},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Application","lvl2":"Structure"},"content":"In the application chapter, we will show\n\nHow a marine heatwave is being forecast shown in \n\nPSL Marine Heatwave Portal?\n\nIs it possible to track how a marine heatwave moves in the ocean?","type":"content","url":"/#application","position":15},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Running the Notebooks"},"type":"lvl2","url":"/#running-the-notebooks","position":16},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl2":"Running the Notebooks"},"content":"You can either run the notebook using \n\nBinder or on your local machine.","type":"content","url":"/#running-the-notebooks","position":17},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-binder","position":18},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"content":"The simplest way to interact with a Jupyter Notebook is through\n\n\nBinder, which enables the execution of a\n\n\nJupyter Book in the cloud. The details of how this works are not\nimportant for now. All you need to know is how to launch a Pythia\nCookbooks chapter via Binder. Simply navigate your mouse to\nthe top right corner of the book chapter you are viewing and click\non the rocket ship icon, (see figure below), and be sure to select\n“launch Binder”. After a moment you should be presented with a\nnotebook that you can interact with. I.e. you’ll be able to execute\nand even change the example programs. You’ll see that the code cells\nhave no output at first, until you execute them by pressing\nShift+Enter. Complete details on how to interact with\na live Jupyter notebook are described in \n\nGetting Started with\nJupyter.","type":"content","url":"/#running-on-binder","position":19},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-your-own-machine","position":20},{"hierarchy":{"lvl1":"Marine Heatwaves Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"content":"If you are interested in running this material locally on your computer, you will need to follow this workflow:\n\n(Replace “cookbook-example” with the title of your cookbooks)\n\nClone the https://github.com/chiaweh2/marine-heatwave-cookbook repository: git clone https://github.com/chiaweh2/marine-heatwave-cookbook.git\n\nMove into the marine-heatwave-cookbook directorycd marine-heatwave-cookbook\n\nCreate and activate your conda environment from the environment.yml fileconda env create -f environment.yml\nconda activate cookbook-example\n\nMove into the notebooks directory and start up Jupyterlabcd notebooks/\njupyter lab","type":"content","url":"/#running-on-your-own-machine","position":21},{"hierarchy":{"lvl1":"Marine Heatwave Detection"},"type":"lvl1","url":"/notebooks/foundation/mhw-observation-myst","position":0},{"hierarchy":{"lvl1":"Marine Heatwave Detection"},"content":"\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst","position":1},{"hierarchy":{"lvl1":"Marine Heatwave Detection"},"type":"lvl1","url":"/notebooks/foundation/mhw-observation-myst#marine-heatwave-detection","position":2},{"hierarchy":{"lvl1":"Marine Heatwave Detection"},"content":"Marine heatwaves are periods of persistent anomalously warm ocean temperatures, which can have significant impacts on marine life as well as coastal communities and economies.\nTo detect the warm ocean water, sea surface temperature (SST) is usually used to define if there is any marine heatwave event.\nThe following example is following the paper \n\nJacox et al., 2022\n\n\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#marine-heatwave-detection","position":3},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Overview"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#overview","position":4},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Overview"},"content":"In this page/notebook, we will be go throught the following steps\n\nExtract the data from the PSL OPeNDAP server\n\nCalculate the SST climatology\n\nCalculate the SST anomaly\n\nDetermine the SST threshold based on the anomaly\n\nIdentify the marine heatwaves based on threshold\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#overview","position":5},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Prerequisites"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#prerequisites","position":6},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Prerequisites"},"content":"To better understand and follow the steps in the notebook, it will be helpful for user to go through\n\nConcepts\n\nImportance\n\nNotes\n\nXarray\n\nHelpful\n\nChunking and OPeNDAP access\n\nTime to learn: 15 minutes.\n\nSystem requirements:\n\npython\n\nXarray\n\npydap (not imported but will be used in the Xarray backend)\n\nmatplotlib (not imported but will be used in the Xarray plotting)\n\nNumpy\n\nplotly (only for the final interactive plot)\n\n\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#prerequisites","position":7},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Imports"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#imports","position":8},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Imports"},"content":"\n\n# import the needed packages\nimport warnings\nimport xarray as xr\nimport numpy as np\nimport plotly.express as px\n\nwarnings.simplefilter(\"ignore\")\n\nwarnings.simplefilterThis line of code is not affecting the execution but just removing some of the warning output that might clutter your notebook. However, do pay attention to some of the warnings since they will indicate some deprecation of function or arg/kwarg in future update.\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#imports","position":9},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Extract the data from an OPeNDAP server"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#extract-the-data-from-an-opendap-server","position":10},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Extract the data from an OPeNDAP server"},"content":"In this page/notebook, we demonstrate how to use the \n\nNOAA OISST v2 High-resolution dataset to detect marine heatwaves.\nThe dataset is currently hosted by \n\nNOAA Physical Sciences Laboratory.\n\nInfoTo explore more gridded datasets that are hosted at NOAA PSL, here is a useful \n\nsearch tool\n\nopendap_mon_url = \"https://psl.noaa.gov/thredds/dodsC/Datasets/noaa.oisst.v2.highres/sst.mon.mean.nc\"\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#extract-the-data-from-an-opendap-server","position":11},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl3":"Xarray getting remote data","lvl2":"Extract the data from an OPeNDAP server"},"type":"lvl3","url":"/notebooks/foundation/mhw-observation-myst#xarray-getting-remote-data","position":12},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl3":"Xarray getting remote data","lvl2":"Extract the data from an OPeNDAP server"},"content":"Xarray has a great support on accessing data in the cloud.\nIt has been continue to expend its capability and functionality with the community discussion like \n\nthis.\nHere we use the xr.open_dataset method with the keyword argument (engine='pydap') to use the pydap package in the backend to access the OPeNDAP server.\n\nds_mon = xr.open_dataset(opendap_mon_url, engine='pydap', chunks={'time':12,'lon':-1,'lat':-1})\n\nLazy LoadingWe can load the data lazily (only loading the metadata and coordinates information) and peek at the data's dimension and availability on our local machine. The actual data (SST values at each grid point in this case) will only be downloaded from the PSL server when further data manipulation (subsetting and aggregation like calculating mean) is needed. The only thing user needs to do to activate this function is to read the netCDF file using the `xr.open_dataset()` method with the keyword argument `chunks={'time':12,'lon':-1,'lat':-1}` provided. The chunk reading approach provide the opportunity to reduce the memory usage on the local machine during the calculation, the possibility of parallelizing the processes, and side-stepping the data download limit set by the OPeNDAP server (PSL server has a 500MB limit). The dataset is loaded lazily (only metadata and coordinates) shown below.\n\nIn our example, we set the size of each chunk to be 12(time)x1440(lon)x720(lat) (when setting the chunk size = -1, it will use the length of the dimension as the chunksize) which is equal to 47.46 MB of data while the entire dataset is 1.39 GB.\nThis allows us to get data in 47.46 MB chunk per download request.\n\nThe dataset is loaded lazily (only metadata and coordinates) shown below.\n\nds_mon\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#xarray-getting-remote-data","position":13},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Calculate the SST climatology"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#calculate-the-sst-climatology","position":14},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Calculate the SST climatology"},"content":"First, we need to define the period that we are going to use to calculate the climatology.\nHere, we picked the 2019-2020 period to calculate the climatology.\n\nClimatologyFor a more accurate and scientifically valid estimate of marine heatwaves, one should usually consider a climatology period of at least 30 years. Here we set the climatology period from 2019 to 2020 (2 years) to speed up the processing time and for demonstration only. The shorter period (less memory consumption) also makes the interactive notebook launch on this page available for the user to manipulate and play with the dataset.\n\nclimo_start_yr = 2019             # determine the climatology/linear trend start year\nclimo_end_yr = 2020               # determine the climatology/linear trend end year\n\nds_mon_crop = ds_mon.where((ds_mon['time.year']>=climo_start_yr)&\n                           (ds_mon['time.year']<=climo_end_yr),drop=True)\n\nds_mon_crop\n\nTo calculate the SST monthly climatology, we utilize the groupby method from Xarray.\n\nds_mon_climo = ds_mon_crop.groupby('time.month').mean()\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#calculate-the-sst-climatology","position":15},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Calculate the SST anomaly"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#calculate-the-sst-anomaly","position":16},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Calculate the SST anomaly"},"content":"After the climatology is determined, we subtract the climatology from the original data to get the anomaly.\n\nds_mon_anom = (ds_mon_crop.groupby('time.month')-ds_mon_climo).compute()\n\n.compute()Notice the `.compute()` method in the code above. The data of SST is only loaded chunk-by-chunk, cropped to the desired period, averaged in the group of months, and finally subtracted the climatology from the original data when we execute the `.compute()` line. All these tasks are now executed in the background with a distributed server assigning tasks to different CPUs.\n\nds_mon_anom\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#calculate-the-sst-anomaly","position":17},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Determine the SST threshold based on the anomaly"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#determine-the-sst-threshold-based-on-the-anomaly","position":18},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Determine the SST threshold based on the anomaly"},"content":"\n\nBased on the \n\nJacox et al., 2022, the threshold is determined based on a three month window with the center month being the monthly threhold one need to determined (e.g. January threshold is determined by all December, January, Feburary SST anomalies).\nTherefore, the function below is written to perform the three months window percentile operation.\n\n########## Functions ######### \n# Function to calculate the 3 month rolling Quantile\ndef mj_3mon_quantile(da_data, mhw_threshold=90.):\n    \n    da_data_quantile = xr.DataArray(coords={'lon':da_data.lon,\n                                            'lat':da_data.lat,\n                                            'month':np.arange(1,13)},\n                                    dims = ['month','lat','lon'])\n\n    for i in range(1,13):\n        if i == 1:\n            mon_range = [12,1,2]\n        elif i == 12 :\n            mon_range = [11,12,1]\n        else:\n            mon_range = [i-1,i,i+1]\n\n        da_data_quantile[i-1,:,:] = (da_data\n                                 .where((da_data['time.month'] == mon_range[0])|\n                                        (da_data['time.month'] == mon_range[1])|\n                                        (da_data['time.month'] == mon_range[2]),drop=True)\n                                 .quantile(mhw_threshold*0.01, dim = 'time', skipna = True))\n\n    return da_data_quantile\n\n\n%time da_mon_quantile = mj_3mon_quantile(ds_mon_anom.sst, mhw_threshold=90)\n\nTipThe `%time` command is jupyter cell magic to time the one-liner cell operation. It provides a great way to find the bottleneck of your data processing steps.\n\nThe determined threshold value of each grid of each month is shown below\n\nda_mon_quantile.isel(month=0).plot(vmin=0,vmax=3)\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#determine-the-sst-threshold-based-on-the-anomaly","position":19},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Identify the marine heatwaves based on threshold"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#identify-the-marine-heatwaves-based-on-threshold","position":20},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Identify the marine heatwaves based on threshold"},"content":"The figure below shows the original SST anomaly value for the first month.\n\nds_mon_anom.sst.isel(time=0).plot(vmin=0,vmax=3)\n\nTo identify the marine heatwaves based on the monthly threshold, we use the where method to find the monthly marine heatwaves with the grid that has SST anomaly below the threshold to be masked as Not-a-Number.\n\nda_mhw = ds_mon_anom.sst.where(ds_mon_anom.sst.groupby('time.month')>da_mon_quantile)\n\nThe figure below shows the SST anomalous values that are above the monthly thresholds for the first months.\n\nda_mhw.isel(time=0).plot(vmin=0,vmax=3)\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#identify-the-marine-heatwaves-based-on-threshold","position":21},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Interactive plot"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#interactive-plot","position":22},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Interactive plot"},"content":"The interactive plot is a great tool for looking at a local changes through zoom in.\nPlotly provides a great interface for the user to also pin point the actual value at the point where they are interested in.\nThe only thing that need further data manipulation for using the plotly tool is to convert the Xarray DataArray to Pandas DataFrame.\nHowever, this can be easily achieved throught the method .to_dataframe() provided by the Xarray package.\n\ndff = (da_mhw.isel(time=0)\n             .to_dataframe()\n             .reset_index()\n             .dropna()\n      )\n\ndff = dff.rename(columns={'sst':'MHW magnitude'})\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#interactive-plot","position":23},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl3":"Plotly setting","lvl2":"Interactive plot"},"type":"lvl3","url":"/notebooks/foundation/mhw-observation-myst#plotly-setting","position":24},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl3":"Plotly setting","lvl2":"Interactive plot"},"content":"After the DataFrame is created the plotly map can be created. Here, we are only using some simple options. More detail setups and options can be find on the \n\nPlotly documentation\n\n# Setup the scatter mapbox detail\ncenter = {'lat':38,'lon':-94}   # center of the map\nzoom = 2                        # zoom level of the map\nmarker_size = 8                 # marker size used on the map\nmapbox_style = 'carto-positron' # mapbox options\n\nfig = px.scatter_mapbox(dff,\n    lon = 'lon',\n    lat = 'lat',\n    color = 'MHW magnitude',\n    color_continuous_scale = 'orrd'\n)\n\nfig.update_layout(\n    mapbox={\n        'style': mapbox_style,\n        'center': center,\n        'zoom': zoom,\n    }\n)\n\n\n# Update the marker size using update_traces\nfig.update_traces(marker=dict(size=marker_size))\n\n\n\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#plotly-setting","position":25},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Summary"},"type":"lvl2","url":"/notebooks/foundation/mhw-observation-myst#summary","position":26},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl2":"Summary"},"content":"Through this example, we demostrate how to lazily loaded a real world SST data from a OPeNDAP server and calculate the threshold that help us define the marine heatwave.\nBy using the threshold, we can find the marine heatwave in each month.","type":"content","url":"/notebooks/foundation/mhw-observation-myst#summary","position":27},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl3":"What’s next?","lvl2":"Summary"},"type":"lvl3","url":"/notebooks/foundation/mhw-observation-myst#whats-next","position":28},{"hierarchy":{"lvl1":"Marine Heatwave Detection","lvl3":"What’s next?","lvl2":"Summary"},"content":"A more interactive figures to view the marine heatwave will be added.\n\n","type":"content","url":"/notebooks/foundation/mhw-observation-myst#whats-next","position":29},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"type":"lvl1","url":"/notebooks/how-to-cite","position":0},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"content":"The material in Project Pythia’s Marine Heatwave Cookbook is licensed for free and open consumption and reuse. All code is served under \n\nApache 2.0, while all non-code content is licensed under \n\nCreative Commons BY 4.0 (CC BY 4.0). Effectively, this means you are free to share and adapt this material so long as you give appropriate credit to the Cookbook authors and the Project Pythia community.\n\nThe source code for the book is \n\nreleased on GitHub and archived on Zenodo. This DOI will always resolve to the latest release of the book source:\n\n","type":"content","url":"/notebooks/how-to-cite","position":1}]}